[pytest]
# Don't look for manage.py: already specified.
django_find_project=true

# Never test in DEBUG mode. Else we get side effects.
django_debug_mode=false

# This flag is picked up by settings.py, which then sets the database used for tests.
env = DJANGO_UNITTESTING = 1

DJANGO_SETTINGS_MODULE = physixed.testing_settings
python_files = test.py test_*.py *_test.py
norecursedirs = hmtlcov/* # no testing required
                staticfiles/* # not needed to be tested
                physixed/physixed/testing_settings.py # skip the testing settings

## --migrations:  Enable Django migrations on test setup
## --reuse-db:    Re-use the testing database if it already exists, and do not remove it when the test finishes
## --new-first:   Runs test files with the newest timestamp first
## --pdb:         Drops into the Python debugger when a test fails
## -v:            Verbose
## -r=s and -r=a: Reports on skipped tests
## --create-db    <-- seems like this is being ignored? See conftest.py
## --cache-clear  Required for flake8 testing
## --flakes       Flake8 checking
## ------------------------------------
addopts = --migrations
          --new-first
          --exitfirst
          --random-order
          -v
          -r=s
          -r=a
        ;   --pdb
          --cache-clear

# The rest of the settings are specified in ".coveragerc", to prevent duplication/unexpected clashes in specification
    --cov=px_kinematics
    --cov-report=html
    --cov-report=term-missing
    --cov-config=.coveragerc
    --no-cov-on-fail
    --cov-branch
    --nomigrations
